[{"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/index.js":"1","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/App.js":"2","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/routes/Routes.js":"3","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Login/index.js":"4","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Register/index.js":"5","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Home/index.js":"6","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Register/styles.js":"7","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Login/styles.js":"8","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Home/styles.js":"9","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/styles/colors.js":"10","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/services/api.js":"11","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/components/UserItem/index.js":"12","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/components/UserItem/styles.js":"13"},{"size":197,"mtime":1611598880348,"results":"14","hashOfConfig":"15"},{"size":158,"mtime":1611599493912,"results":"16","hashOfConfig":"15"},{"size":492,"mtime":1611606252574,"results":"17","hashOfConfig":"15"},{"size":2262,"mtime":1611611804463,"results":"18","hashOfConfig":"15"},{"size":2541,"mtime":1611610381265,"results":"19","hashOfConfig":"15"},{"size":1915,"mtime":1611630486980,"results":"20","hashOfConfig":"15"},{"size":2565,"mtime":1611786455221,"results":"21","hashOfConfig":"15"},{"size":2789,"mtime":1611786400068,"results":"22","hashOfConfig":"15"},{"size":2256,"mtime":1611786090339,"results":"23","hashOfConfig":"15"},{"size":150,"mtime":1611600360098,"results":"24","hashOfConfig":"15"},{"size":118,"mtime":1611786511954,"results":"25","hashOfConfig":"15"},{"size":388,"mtime":1611630010380,"results":"26","hashOfConfig":"15"},{"size":561,"mtime":1611631368422,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1uns1tf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/index.js",[],["58","59"],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/App.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/routes/Routes.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Login/index.js",["60"],"import React, { useState, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport LogoIMDB from \"../../assets/images/imdb.svg\";\n\nimport {\n  Container,\n  AreaButtonsFormLogin,\n  ButtonRegisterFormLogin,\n  ButtonSubmitFormLogin,\n  FormLogin,\n  ImageLogo,\n  InputFormLogin,\n  LoginPanel,\n  TextLogin,\n} from \"./styles\";\n\nimport api from \"../../services/api\";\n\nfunction Login() {\n  const [emailTxt, setEmailTxt] = useState(\"\");\n  const [passwordTxt, setPasswordTxt] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    api\n      .get(\"/\")\n      .then((res) => {\n        return;\n      })\n      .catch((err) => {\n        return alert(\"Erro ao se conectar no backend\");\n      });\n  }, []);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token:imdb\")) {\n      history.push(\"/home\");\n    }\n  }, []);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    if (passwordTxt === \"\" && emailTxt === \"\")\n      return alert(\"Preencha todos os campos\");\n\n    api\n      .post(\"/user/auth\", {\n        email: emailTxt,\n        password: passwordTxt,\n      })\n      .then((res) => {\n        const { token } = res.data;\n\n        localStorage.setItem(\"token:imdb\", token);\n        history.push(\"/home\");\n      })\n      .catch((err) => {\n        console.log(err);\n        return alert(\"Falha ao fazer o login. Tente novamente. \" + err);\n      });\n  }\n\n  return (\n    <Container>\n      <LoginPanel>\n        <ImageLogo src={LogoIMDB} height={70} />\n        <TextLogin>Fa√ßa seu Logon</TextLogin>\n        <FormLogin onSubmit={handleLogin}>\n          <InputFormLogin\n            type=\"email\"\n            placeholder=\"Insira seu email\"\n            onChange={(e) => setEmailTxt(e.target.value)}\n          />\n          <InputFormLogin\n            type=\"password\"\n            placeholder=\"Insira sua senha\"\n            onChange={(e) => setPasswordTxt(e.target.value)}\n          />\n          <AreaButtonsFormLogin>\n            <ButtonSubmitFormLogin type=\"submit\">Entrar</ButtonSubmitFormLogin>\n            <ButtonRegisterFormLogin to=\"/register\">\n              Crie uma conta aqui!\n            </ButtonRegisterFormLogin>\n          </AreaButtonsFormLogin>\n        </FormLogin>\n      </LoginPanel>\n    </Container>\n  );\n}\n\nexport default Login;\n","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Register/index.js",["61"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport LogoIMDB from \"../../assets/images/imdb.svg\";\n\nimport {\n  Container,\n  AreaButtonsFormRegister,\n  ButtonBackFormRegister,\n  ButtonSubmitFormRegister,\n  FormRegister,\n  ImageLogo,\n  InputFormRegister,\n  RegisterPanel,\n  TextRegister,\n} from \"./styles\";\nimport api from \"../../services/api\";\n\nfunction Register() {\n  const [emailTxt, setEmailTxt] = useState(\"\");\n  const [nameTxt, setNameTxt] = useState(\"\");\n  const [passwordTxt, setPasswordTxt] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    api\n      .get(\"/\")\n      .then((res) => {\n        return;\n      })\n      .catch((err) => {\n        return alert(\"Erro ao se conectar no backend\");\n      });\n  }, []);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token:imdb\")) {\n      history.push(\"/home\");\n    }\n  }, []);\n\n  async function handleRegister(e) {\n    e.preventDefault();\n    if (nameTxt === \"\" && passwordTxt === \"\" && emailTxt === \"\")\n      return alert(\"Preencha todos os campos\");\n    try {\n      const data_register = {\n        name: nameTxt,\n        email: emailTxt,\n        password: passwordTxt,\n      };\n\n      const { token } = await (await api.post(\"user/register\", data_register))\n        .data;\n\n      await localStorage.setItem(\"token:imdb\", token);\n\n      history.push(\"/home\");\n    } catch (error) {\n      alert(\"Falha ao criar conta. Tente novamente.\");\n    }\n  }\n\n  return (\n    <Container>\n      <RegisterPanel>\n        <ImageLogo src={LogoIMDB} height={70} />\n        <TextRegister>Crie sua conta</TextRegister>\n        <FormRegister onSubmit={handleRegister}>\n          <InputFormRegister\n            type=\"text\"\n            placeholder=\"Insira seu nome\"\n            onChange={(e) => setNameTxt(e.target.value)}\n          />\n          <InputFormRegister\n            type=\"email\"\n            placeholder=\"Insira seu email\"\n            onChange={(e) => setEmailTxt(e.target.value)}\n          />\n          <InputFormRegister\n            type=\"password\"\n            placeholder=\"Insira sua senha\"\n            onChange={(e) => setPasswordTxt(e.target.value)}\n          />\n          <AreaButtonsFormRegister>\n            <ButtonSubmitFormRegister type=\"submit\">\n              Criar\n            </ButtonSubmitFormRegister>\n            <ButtonBackFormRegister to=\"/\">Voltar</ButtonBackFormRegister>\n          </AreaButtonsFormRegister>\n        </FormRegister>\n      </RegisterPanel>\n    </Container>\n  );\n}\n\nexport default Register;\n","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Home/index.js",["62"],"import React, { useState, useEffect } from \"react\";\nimport LogoIMDB from \"../../assets/images/imdb.svg\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport UserItem from \"../../components/UserItem\";\n\nimport {\n  Container,\n  HeaderHome,\n  NavHeader,\n  ButtonLogout,\n  ImageLogo,\n  Content,\n  HeaderText,\n  SectionUsers,\n  ListUsersArea,\n} from \"./styles\";\nimport api from \"../../services/api\";\n\nfunction Home() {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    api\n      .get(\"/\")\n      .then((res) => {\n        return;\n      })\n      .catch((err) => {\n        return alert(\"Erro ao se conectar no backend\");\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token:imdb\")) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const AuthStr = \"Bearer \" + localStorage.getItem(\"token:imdb\");\n    api\n      .get(\"/user\", { headers: { Authorization: AuthStr } })\n      .then((res) => setUsers(res.data))\n      .catch((err) => alert(\"Houve algum erro ao buscar os usu√°rios. \" + err));\n  }, []);\n\n  async function handleLogout() {\n    try {\n      await localStorage.removeItem(\"token:imdb\");\n\n      history.push(\"/\");\n    } catch (err) {\n      alert(\"Erro ao sair da conta\");\n    }\n  }\n\n  return (\n    <Container>\n      <HeaderHome>\n        <NavHeader>\n          <ButtonLogout onClick={handleLogout}>Logout</ButtonLogout>\n        </NavHeader>\n        <ImageLogo src={LogoIMDB} height={70} />\n      </HeaderHome>\n\n      <Content>\n        <SectionUsers>\n          <HeaderText>\n            Usu√°rios que j√° participam do IMDB <hr />\n          </HeaderText>\n          <ListUsersArea>\n            {users.length > 0\n              ? users.map((item) => <UserItem key={item.id} name={item.name} />)\n              : null}\n          </ListUsersArea>\n        </SectionUsers>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Home;\n","/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Register/styles.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Login/styles.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/pages/Home/styles.js",["63"],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/styles/colors.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/services/api.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/components/UserItem/index.js",[],"/home/ianmarcony/Documentos/programming/web/IMDB-app/frontend/src/components/UserItem/styles.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":8,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["80"],["81"],["82"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},{"desc":"83","fix":"86"},"Update the dependencies array to be: [history]",{"range":"87","text":"88"},{"range":"89","text":"88"},{"range":"90","text":"88"},[835,837],"[history]",[900,902],[788,790]]